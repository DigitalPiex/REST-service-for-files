warning: LF will be replaced by CRLF in src/main/java/com/example/filedemo/restcontroller/FileController.java.
The file will have its original line endings in your working directory
[1mdiff --git a/demo/.gitignore b/demo/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 549e00a..0000000[m
[1m--- a/demo/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m-HELP.md[m
[31m-target/[m
[31m-!.mvn/wrapper/maven-wrapper.jar[m
[31m-!**/src/main/**/target/[m
[31m-!**/src/test/**/target/[m
[31m-[m
[31m-### STS ###[m
[31m-.apt_generated[m
[31m-.classpath[m
[31m-.factorypath[m
[31m-.project[m
[31m-.settings[m
[31m-.springBeans[m
[31m-.sts4-cache[m
[31m-[m
[31m-### IntelliJ IDEA ###[m
[31m-.idea[m
[31m-*.iws[m
[31m-*.iml[m
[31m-*.ipr[m
[31m-[m
[31m-### NetBeans ###[m
[31m-/nbproject/private/[m
[31m-/nbbuild/[m
[31m-/dist/[m
[31m-/nbdist/[m
[31m-/.nb-gradle/[m
[31m-build/[m
[31m-!**/src/main/**/build/[m
[31m-!**/src/test/**/build/[m
[31m-[m
[31m-### VS Code ###[m
[31m-.vscode/[m
[1mdiff --git a/demo/.mvn/wrapper/MavenWrapperDownloader.java b/demo/.mvn/wrapper/MavenWrapperDownloader.java[m
[1mdeleted file mode 100644[m
[1mindex e76d1f3..0000000[m
[1m--- a/demo/.mvn/wrapper/MavenWrapperDownloader.java[m
[1m+++ /dev/null[m
[36m@@ -1,117 +0,0 @@[m
[31m-/*[m
[31m- * Copyright 2007-present the original author or authors.[m
[31m- *[m
[31m- * Licensed under the Apache License, Version 2.0 (the "License");[m
[31m- * you may not use this file except in compliance with the License.[m
[31m- * You may obtain a copy of the License at[m
[31m- *[m
[31m- *      https://www.apache.org/licenses/LICENSE-2.0[m
[31m- *[m
[31m- * Unless required by applicable law or agreed to in writing, software[m
[31m- * distributed under the License is distributed on an "AS IS" BASIS,[m
[31m- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m- * See the License for the specific language governing permissions and[m
[31m- * limitations under the License.[m
[31m- */[m
[31m-import java.net.*;[m
[31m-import java.io.*;[m
[31m-import java.nio.channels.*;[m
[31m-import java.util.Properties;[m
[31m-[m
[31m-public class MavenWrapperDownloader {[m
[31m-[m
[31m-    private static final String WRAPPER_VERSION = "0.5.6";[m
[31m-    /**[m
[31m-     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.[m
[31m-     */[m
[31m-    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"[m
[31m-        + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";[m
[31m-[m
[31m-    /**[m
[31m-     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to[m
[31m-     * use instead of the default one.[m
[31m-     */[m
[31m-    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =[m
[31m-            ".mvn/wrapper/maven-wrapper.properties";[m
[31m-[m
[31m-    /**[m
[31m-     * Path where the maven-wrapper.jar will be saved to.[m
[31m-     */[m
[31m-    private static final String MAVEN_WRAPPER_JAR_PATH =[m
[31m-            ".mvn/wrapper/maven-wrapper.jar";[m
[31m-[m
[31m-    /**[m
[31m-     * Name of the property which should be used to override the default download url for the wrapper.[m
[31m-     */[m
[31m-    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";[m
[31m-[m
[31m-    public static void main(String args[]) {[m
[31m-        System.out.println("- Downloader started");[m
[31m-        File baseDirectory = new File(args[0]);[m
[31m-        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());[m
[31m-[m
[31m-        // If the maven-wrapper.properties exists, read it and check if it contains a custom[m
[31m-        // wrapperUrl parameter.[m
[31m-        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);[m
[31m-        String url = DEFAULT_DOWNLOAD_URL;[m
[31m-        if(mavenWrapperPropertyFile.exists()) {[m
[31m-            FileInputStream mavenWrapperPropertyFileInputStream = null;[m
[31m-            try {[m
[31m-                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);[m
[31m-                Properties mavenWrapperProperties = new Properties();[m
[31m-                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);[m
[31m-                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);[m
[31m-            } catch (IOException e) {[m
[31m-                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");[m
[31m-            } finally {[m
[31m-                try {[m
[31m-                    if(mavenWrapperPropertyFileInputStream != null) {[m
[31m-                        mavenWrapperPropertyFileInputStream.close();[m
[31m-                    }[m
[31m-                } catch (IOException e) {[m
[31m-                    // Ignore ...[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-        System.out.println("- Downloading from: " + url);[m
[31m-[m
[31m-        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);[m
[31m-        if(!outputFile.getParentFile().exists()) {[m
[31m-            if(!outputFile.getParentFile().mkdirs()) {[m
[31m-                System.out.println([m
[31m-                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");[m
[31m-            }[m
[31m-        }[m
[31m-        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());[m
[31m-        try {[m
[31m-            downloadFileFromURL(url, outputFile);[m
[31m-            System.out.println("Done");[m
[31m-            System.exit(0);[m
[31m-        } catch (Throwable e) {[m
[31m-            System.out.println("- Error downloading");[m
[31m-            e.printStackTrace();[m
[31m-            System.exit(1);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    private static void downloadFileFromURL(String urlString, File destination) throws Exception {[m
[31m-        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {[m
[31m-            String username = System.getenv("MVNW_USERNAME");[m
[31m-            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();[m
[31m-            Authenticator.setDefault(new Authenticator() {[m
[31m-                @Override[m
[31m-                protected PasswordAuthentication getPasswordAuthentication() {[m
[31m-                    return new PasswordAuthentication(username, password);[m
[31m-                }[m
[31m-            });[m
[31m-        }[m
[31m-        URL website = new URL(urlString);[m
[31m-        ReadableByteChannel rbc;[m
[31m-        rbc = Channels.newChannel(website.openStream());[m
[31m-        FileOutputStream fos = new FileOutputStream(destination);[m
[31m-        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);[m
[31m-        fos.close();[m
[31m-        rbc.close();[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/demo/.mvn/wrapper/maven-wrapper.jar b/demo/.mvn/wrapper/maven-wrapper.jar[m
[1mdeleted file mode 100644[m
[1mindex 2cc7d4a..0000000[m
Binary files a/demo/.mvn/wrapper/maven-wrapper.jar and /dev/null differ
[1mdiff --git a/demo/.mvn/wrapper/maven-wrapper.properties b/demo/.mvn/wrapper/maven-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex 642d572..0000000[m
[1m--- a/demo/.mvn/wrapper/maven-wrapper.properties[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip[m
[31m-wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar[m
[1mdiff --git a/demo/mvnw b/demo/mvnw[m
[1mdeleted file mode 100644[m
[1mindex a16b543..0000000[m
[1m--- a/d